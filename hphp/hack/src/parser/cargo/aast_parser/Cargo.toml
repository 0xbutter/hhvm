[package]
name = "aast_parser"
version = "3.49.0"
edition = "2018"

[lib]
name = "aast_parser"
path = "../../aast_parser_lib.rs"

[dependencies]
parser_rust = { path = "../..", package = "hack_parser" }
parser_core_types = { path = "../core_types", package = "hack_parser_core_types" }
lowerer = { path = "../lowerer", package = "hack_lowerer" }
decl_mode_parser = { path = "../decl_mode_parser", package = "decl_mode_parser" }
coroutine_smart_constructors = { path = "../coroutine_smart_constructors", package = "coroutine_smart_constructors" }
positioned_parser = { path = "../positioned_parser", package = "positioned_parser" }
syntax_tree = { path = "../syntax_tree", package = "syntax_tree" }
oxidized = {path = "../../../oxidized", package = "hack_oxidized" }
rust_parser_errors = { path = "../errors", package = "hack_parser_errors" }
ocamlrep = {path = "../../../ocamlrep", package = "hack_ocamlrep"}
ocamlrep_derive = {path = "../../../ocamlrep_derive", package = "hack_ocamlrep_derive"}
regex = "^1.2.1"
lazy_static = "^1.3.0"
rust_coroutine = {path = "../../coroutine", package = "rust_coroutine" }
naming_special_names_rust = { path = "../../../naming", package = "naming_special_names" }
stack_limit = { path = "../../../utils/stack_limit", package = "hack_stack_limit" }
lint_rust = { path = "../../../utils/lint", package = "hack_lint" }
itertools = "^0.7"
