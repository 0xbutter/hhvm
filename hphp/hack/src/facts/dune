(* -*- tuareg -*- *)

let dune_file s =
  String.concat "\n"
    [ ""
    ; s
    ; ""
    ; "(include dune.inc)"
    ]

let with_buck =
{|
; FFI OCaml to Rust (../../target/*/librust_facts_ffi.a)
; contains "external" function definition in .ml and
; the symbol is provided by the ocaml-rs Rust package via caml! macro
(library
  (name rust_facts_ffi)
  (modules)
  (preprocess (pps ppx_deriving.std)) ; See T41851208
  (self_build_stubs_archive (rust_facts_ffi))
)
(rule
  (targets librust_facts_ffi_stubs.a)
  (locks /cargo)
  (action
    (run %{workspace_root}/scripts/build_rust_to_ocaml.sh
      hack_facts_ffi
      rust_facts_ffi
    )
  )
)
|}

let with_oss = {|
; No support for rust at the moment, only use the stub
(library
  (name rust_facts_ffi)
  (wrapped false)
  (modules)
  (preprocess (pps ppx_deriving.std)) ; See T41851208
)
|}

let () =
  (* test presence of fb subfolder *)
  let current_dir = Sys.getcwd () in
  (* we are in src/facts, locate src/facebook *)
  let src_dir = Filename.dirname current_dir in
  let fb_dir = Filename.concat src_dir "facebook" in
  (* locate src/facebook/dune *)
  let fb_dune = Filename.concat fb_dir "dune" in
  let is_fb = Sys.file_exists fb_dune in
  let rust = if is_fb then with_buck else with_oss in
  Jbuild_plugin.V1.send @@ dune_file rust
