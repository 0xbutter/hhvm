[(Fun
    { Aast.AnnotatedAST.f_annotation = (); f_mode = <opaque>;
      f_ret = (Some ([3:35-39], (Aast_defs.Hprim Aast_defs.Tvoid)));
      f_name = ([3:10-22], "\\takes_string"); f_tparams = [];
      f_where_constraints = []; f_variadic = FVnonVariadic;
      f_params =
      [{ Aast.AnnotatedAST.param_annotation = ([3:30-32], string);
         param_hint = (Some ([3:23-29], (Aast_defs.Hprim Aast_defs.Tstring)));
         param_is_reference = false; param_is_variadic = false;
         param_pos = [3:30-32]; param_name = "$s"; param_expr = None;
         param_callconv = None; param_user_attributes = [] }
        ];
      f_body =
      (NamedBody { Aast.AnnotatedAST.fnb_nast = [Noop]; fnb_unsafe = false });
      f_fun_kind = Ast_defs.FSync; f_user_attributes = [];
      f_ret_by_ref = false });
  (Fun
     { Aast.AnnotatedAST.f_annotation = (); f_mode = <opaque>;
       f_ret = (Some ([5:15-19], (Aast_defs.Hprim Aast_defs.Tvoid)));
       f_name = ([5:10-11], "\\f"); f_tparams = []; f_where_constraints = [];
       f_variadic = FVnonVariadic; f_params = [];
       f_body =
       (NamedBody
          { Aast.AnnotatedAST.fnb_nast =
            [(Expr
                (([6:3-24], void),
                 (Call (Aast_defs.Cnormal,
                    (([6:3-15], (function(string $s): void)),
                     (Id ([6:3-15], "\\takes_string"))),
                    [],
                    [(([6:16-23], string), (String ([6:16-23], "hello")))],
                    []))))
              ];
            fnb_unsafe = false });
       f_fun_kind = Ast_defs.FSync; f_user_attributes = [];
       f_ret_by_ref = false })
  ]
