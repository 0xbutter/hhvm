[(AnnotatedAST.Fun
    { AnnotatedAST.f_annotation = (); f_mode = <opaque>;
      f_ret = (Some ([12:17-12:21], (Hprim Tvoid)));
      f_name = ([12:10-12:13], "\\foo"); f_tparams = [];
      f_where_constraints = []; f_variadic = AnnotatedAST.FVnonVariadic;
      f_params = [];
      f_body =
      (AnnotatedAST.NamedBody
         { AnnotatedAST.fnb_nast =
           [(AnnotatedAST.Expr
               (([13:3-13:9], Some int),
                (AnnotatedAST.Binop ((Eq None),
                   (([13:3-13:5], Some int),
                    (AnnotatedAST.Lvar ([13:3-13:5], $y))),
                   (([13:8-13:9], Some int),
                    (AnnotatedAST.Int ([13:8-13:9], "2")))
                   ))));
             (AnnotatedAST.Expr
                (([15:3-15:10], Some [fun]),
                 (AnnotatedAST.Binop ((Eq None),
                    (([15:3-15:5], Some [fun]),
                     (AnnotatedAST.Lvar ([15:3-15:5], $x))),
                    (([15:8-15:10], Some _),
                     (AnnotatedAST.Efun (
                        { AnnotatedAST.f_annotation = (); f_mode = <opaque>;
                          f_ret = None; f_name = ([Pos.none], ";anonymous");
                          f_tparams = []; f_where_constraints = [];
                          f_variadic = AnnotatedAST.FVnonVariadic;
                          f_params =
                          [{ AnnotatedAST.param_hint = None;
                             param_is_reference = false;
                             param_is_variadic = false;
                             param_pos = [15:8-15:10]; param_name = "$z";
                             param_expr = None; param_callconv = None;
                             param_user_attributes = [] }
                            ];
                          f_body =
                          (AnnotatedAST.NamedBody
                             { AnnotatedAST.fnb_nast =
                               [(AnnotatedAST.Return ([15:15-15:22],
                                   (Some (([15:15-15:22], Some int),
                                          (AnnotatedAST.Binop (Plus,
                                             (([15:15-15:17], Some int),
                                              (AnnotatedAST.Lvar
                                                 ([15:15-15:17], $y))),
                                             (([15:20-15:22], Some _),
                                              (AnnotatedAST.Lvar
                                                 ([15:20-15:22], $z)))
                                             ))))
                                   ))
                                 ];
                               fnb_unsafe = false });
                          f_fun_kind = FSync; f_user_attributes = [];
                          f_ret_by_ref = false },
                        [([15:15-15:17], $y)])))
                    ))));
             (AnnotatedAST.Expr
                (([16:3-16:13], Some int),
                 (AnnotatedAST.Binop ((Eq None),
                    (([16:3-16:5], Some int),
                     (AnnotatedAST.Lvar ([16:3-16:5], $l))),
                    (([16:8-16:13], Some int),
                     (AnnotatedAST.Call (Cnormal,
                        (([16:8-16:10], Some [fun]),
                         (AnnotatedAST.Lvar ([16:8-16:10], $x))),
                        [],
                        [(([16:11-16:12], Some int),
                          (AnnotatedAST.Int ([16:11-16:12], "2")))],
                        [])))
                    ))));
             (AnnotatedAST.Expr
                (([18:3-18:16], Some [fun]),
                 (AnnotatedAST.Binop ((Eq None),
                    (([18:3-18:5], Some [fun]),
                     (AnnotatedAST.Lvar ([18:3-18:5], $x))),
                    (([18:8-18:16], Some _),
                     (AnnotatedAST.Efun (
                        { AnnotatedAST.f_annotation = (); f_mode = <opaque>;
                          f_ret = None; f_name = ([Pos.none], ";anonymous");
                          f_tparams = []; f_where_constraints = [];
                          f_variadic = AnnotatedAST.FVnonVariadic;
                          f_params =
                          [{ AnnotatedAST.param_hint = None;
                             param_is_reference = false;
                             param_is_variadic = false;
                             param_pos = [18:17-18:19]; param_name = "$z";
                             param_expr = None; param_callconv = None;
                             param_user_attributes = [] }
                            ];
                          f_body =
                          (AnnotatedAST.NamedBody
                             { AnnotatedAST.fnb_nast =
                               [(AnnotatedAST.Return ([19:5-19:20],
                                   (Some (([19:12-19:19], Some int),
                                          (AnnotatedAST.Binop (Plus,
                                             (([19:12-19:14], Some int),
                                              (AnnotatedAST.Lvar
                                                 ([19:12-19:14], $y))),
                                             (([19:17-19:19], Some _),
                                              (AnnotatedAST.Lvar
                                                 ([19:17-19:19], $z)))
                                             ))))
                                   ))
                                 ];
                               fnb_unsafe = false });
                          f_fun_kind = FSync; f_user_attributes = [];
                          f_ret_by_ref = false },
                        [([18:26-18:28], $y)])))
                    ))));
             (AnnotatedAST.Expr
                (([23:3-23:9], Some [fun]),
                 (AnnotatedAST.Binop ((Eq None),
                    (([23:3-23:5], Some [fun]),
                     (AnnotatedAST.Lvar ([23:3-23:5], $x))),
                    (([23:8-23:9], Some _),
                     (AnnotatedAST.Efun (
                        { AnnotatedAST.f_annotation = (); f_mode = <opaque>;
                          f_ret = None; f_name = ([Pos.none], ";anonymous");
                          f_tparams = []; f_where_constraints = [];
                          f_variadic = AnnotatedAST.FVnonVariadic;
                          f_params =
                          [{ AnnotatedAST.param_hint = None;
                             param_is_reference = false;
                             param_is_variadic = false;
                             param_pos = [23:9-23:11]; param_name = "$a";
                             param_expr = None; param_callconv = None;
                             param_user_attributes = [] };
                            { AnnotatedAST.param_hint = None;
                              param_is_reference = false;
                              param_is_variadic = false;
                              param_pos = [23:13-23:15]; param_name = "$b";
                              param_expr = None; param_callconv = None;
                              param_user_attributes = [] }
                            ];
                          f_body =
                          (AnnotatedAST.NamedBody
                             { AnnotatedAST.fnb_nast =
                               [(AnnotatedAST.Return ([23:21-23:28],
                                   (Some (([23:21-23:28], Some _),
                                          (AnnotatedAST.Binop (Plus,
                                             (([23:21-23:23], Some _),
                                              (AnnotatedAST.Lvar
                                                 ([23:21-23:23], $a))),
                                             (([23:26-23:28], Some _),
                                              (AnnotatedAST.Lvar
                                                 ([23:26-23:28], $b)))
                                             ))))
                                   ))
                                 ];
                               fnb_unsafe = false });
                          f_fun_kind = FSync; f_user_attributes = [];
                          f_ret_by_ref = false },
                        [])))
                    ))));
             (AnnotatedAST.Expr
                (([24:3-24:17], Some int),
                 (AnnotatedAST.Binop ((Eq None),
                    (([24:3-24:5], Some int),
                     (AnnotatedAST.Lvar ([24:3-24:5], $l))),
                    (([24:8-24:17], Some int),
                     (AnnotatedAST.Call (Cnormal,
                        (([24:8-24:10], Some [fun]),
                         (AnnotatedAST.Lvar ([24:8-24:10], $x))),
                        [],
                        [(([24:11-24:12], Some int),
                          (AnnotatedAST.Int ([24:11-24:12], "2")));
                          (([24:14-24:16], Some int),
                           (AnnotatedAST.Lvar ([24:14-24:16], $y)))
                          ],
                        [])))
                    ))))
             ];
           fnb_unsafe = false });
      f_fun_kind = FSync; f_user_attributes = []; f_ret_by_ref = false })
  ]
