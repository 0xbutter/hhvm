[(AnnotatedAST.Fun
    { AnnotatedAST.f_annotation = (); f_mode = <opaque>;
      f_ret = (Some ([7:33-7:39], (Hprim Tstring)));
      f_name = ([7:10-7:29], "\\returnsTheStringFoo"); f_tparams = [];
      f_where_constraints = []; f_variadic = AnnotatedAST.FVnonVariadic;
      f_params = [];
      f_body =
      (AnnotatedAST.NamedBody
         { AnnotatedAST.fnb_nast =
           [(AnnotatedAST.Return ([7:42-7:55],
               (Some (([7:49-7:54], Some string),
                      (AnnotatedAST.String ([7:49-7:54], "foo"))))
               ))
             ];
           fnb_unsafe = false });
      f_fun_kind = FSync; f_user_attributes = []; f_ret_by_ref = false });
  (AnnotatedAST.Fun
     { AnnotatedAST.f_annotation = (); f_mode = <opaque>;
       f_ret = (Some ([9:22-9:26], (Hprim Tvoid)));
       f_name = ([9:10-9:14], "\\test"); f_tparams = [];
       f_where_constraints = []; f_variadic = AnnotatedAST.FVnonVariadic;
       f_params =
       [{ AnnotatedAST.param_annotation = ([9:17-9:19], Some \C);
          param_hint =
          (Some ([9:15-9:16], (Happly (([9:15-9:16], "\\C"), []))));
          param_is_reference = false; param_is_variadic = false;
          param_pos = [9:17-9:19]; param_name = "$c"; param_expr = None;
          param_callconv = None; param_user_attributes = [] }
         ];
       f_body =
       (AnnotatedAST.NamedBody
          { AnnotatedAST.fnb_nast =
            [(AnnotatedAST.Expr
                (([10:3-10:15], Some string),
                 (AnnotatedAST.Binop ((Eq None),
                    (([10:3-10:7], Some string),
                     (AnnotatedAST.Lvar ([10:3-10:7], $foo))),
                    (([10:10-10:15], Some string),
                     (AnnotatedAST.String ([10:10-10:15], "foo")))
                    ))));
              (AnnotatedAST.Expr
                 (([11:3-11:10], Some ?int),
                  (AnnotatedAST.Obj_get (
                     (([11:3-11:5], Some \C),
                      (AnnotatedAST.Lvar ([11:3-11:5], $c))),
                     (([11:7-11:10], Some ?int),
                      (AnnotatedAST.Id ([11:7-11:10], "foo"))),
                     OG_nullthrows))));
              (AnnotatedAST.Expr
                 (([12:3-12:11], Some _),
                  (AnnotatedAST.Obj_get (
                     (([12:3-12:5], Some \C),
                      (AnnotatedAST.Lvar ([12:3-12:5], $c))),
                     (([12:7-12:11], Some _),
                      (AnnotatedAST.Lvar ([12:7-12:11], $foo))),
                     OG_nullthrows))));
              (AnnotatedAST.Expr
                 (([13:3-13:29], Some _),
                  (AnnotatedAST.Array_get (
                     (([13:3-13:8], Some _),
                      (AnnotatedAST.Obj_get (
                         (([13:3-13:5], Some \C),
                          (AnnotatedAST.Lvar ([13:3-13:5], $c))),
                         (([13:7-13:8], Some _), AnnotatedAST.Null),
                         OG_nullthrows))),
                     (Some (([13:8-13:29], Some string),
                            (AnnotatedAST.Call (Cnormal,
                               (([13:8-13:27], Some (function(): string)),
                                (AnnotatedAST.Id
                                   ([13:8-13:27], "\\returnsTheStringFoo"))),
                               [], [], []))))
                     ))))
              ];
            fnb_unsafe = false });
       f_fun_kind = FSync; f_user_attributes = []; f_ret_by_ref = false });
  (AnnotatedAST.Class
     { AnnotatedAST.c_annotation = (); c_mode = <opaque>; c_final = false;
       c_is_xhp = false; c_kind = Cnormal; c_name = ([3:7-3:8], "\\C");
       c_tparams = <opaque>; c_extends = []; c_uses = [];
       c_xhp_attr_uses = []; c_xhp_category = []; c_req_extends = [];
       c_req_implements = []; c_implements = []; c_consts = [];
       c_typeconsts = []; c_static_vars = [];
       c_vars =
       [{ AnnotatedAST.cv_final = false; cv_is_xhp = false;
          cv_visibility = Public;
          cv_type =
          (Some ([4:10-4:14], (Hoption ([4:11-4:14], (Hprim Tint)))));
          cv_id = ([4:15-4:19], "foo"); cv_expr = None;
          cv_user_attributes = [] }
         ];
       c_constructor = None; c_static_methods = []; c_methods = [];
       c_user_attributes = []; c_enum = None })
  ]
