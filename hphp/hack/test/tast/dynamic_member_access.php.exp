[(Fun
    { Aast.AnnotatedAST.f_annotation = (); f_mode = <opaque>;
      f_ret = (Some ([7:33-7:39], (Aast_defs.Hprim Aast_defs.Tstring)));
      f_name = ([7:10-7:29], "\\returnsTheStringFoo"); f_tparams = [];
      f_where_constraints = []; f_variadic = FVnonVariadic; f_params = [];
      f_body =
      (NamedBody
         { Aast.AnnotatedAST.fnb_nast =
           [(Return ([7:42-7:55],
               (Some (([7:49-7:54], string), (String ([7:49-7:54], "foo"))))
               ))
             ];
           fnb_unsafe = false });
      f_fun_kind = Ast_defs.FSync; f_user_attributes = [];
      f_ret_by_ref = false });
  (Fun
     { Aast.AnnotatedAST.f_annotation = (); f_mode = <opaque>;
       f_ret = (Some ([9:22-9:26], (Aast_defs.Hprim Aast_defs.Tvoid)));
       f_name = ([9:10-9:14], "\\test"); f_tparams = [];
       f_where_constraints = []; f_variadic = FVnonVariadic;
       f_params =
       [{ Aast.AnnotatedAST.param_annotation = ([9:17-9:19], C);
          param_hint =
          (Some ([9:15-9:16], (Aast_defs.Happly (([9:15-9:16], "\\C"), []))));
          param_is_reference = false; param_is_variadic = false;
          param_pos = [9:17-9:19]; param_name = "$c"; param_expr = None;
          param_callconv = None; param_user_attributes = [] }
         ];
       f_body =
       (NamedBody
          { Aast.AnnotatedAST.fnb_nast =
            [(Expr
                (([10:3-10:15], string),
                 (Binop ((Ast_defs.Eq None),
                    (([10:3-10:7], string), (Lvar ([10:3-10:7], $foo))),
                    (([10:10-10:15], string), (String ([10:10-10:15], "foo")))
                    ))));
              (Expr
                 (([11:3-11:10], ?int),
                  (Obj_get ((([11:3-11:5], C), (Lvar ([11:3-11:5], $c))),
                     (([11:7-11:10], ?int), (Id ([11:7-11:10], "foo"))),
                     OG_nullthrows))));
              (Expr
                 (([12:3-12:11], _),
                  (Obj_get ((([12:3-12:5], C), (Lvar ([12:3-12:5], $c))),
                     (([12:7-12:11], _), (Lvar ([12:7-12:11], $foo))),
                     OG_nullthrows))));
              (Expr
                 (([13:3-13:29], _),
                  (Array_get (
                     (([13:3-13:8], _),
                      (Obj_get ((([13:3-13:5], C), (Lvar ([13:3-13:5], $c))),
                         (([13:7-13:8], _), Null), OG_nullthrows))),
                     (Some (([13:8-13:29], string),
                            (Call (Aast_defs.Cnormal,
                               (([13:8-13:27], (function(): string)),
                                (Id ([13:8-13:27], "\\returnsTheStringFoo"))),
                               [], [], []))))
                     ))))
              ];
            fnb_unsafe = false });
       f_fun_kind = Ast_defs.FSync; f_user_attributes = [];
       f_ret_by_ref = false });
  (Class
     { Aast.AnnotatedAST.c_annotation = (); c_mode = <opaque>;
       c_final = false; c_is_xhp = false; c_kind = Ast_defs.Cnormal;
       c_name = ([3:7-3:8], "\\C"); c_tparams = <opaque>; c_extends = [];
       c_uses = []; c_xhp_attr_uses = []; c_xhp_category = [];
       c_req_extends = []; c_req_implements = []; c_implements = [];
       c_consts = []; c_typeconsts = []; c_static_vars = [];
       c_vars =
       [{ Aast.AnnotatedAST.cv_final = false; cv_is_xhp = false;
          cv_visibility = Aast_defs.Public;
          cv_type =
          (Some ([4:10-4:14],
                 (Aast_defs.Hoption
                    ([4:11-4:14], (Aast_defs.Hprim Aast_defs.Tint)))));
          cv_id = ([4:15-4:19], "foo"); cv_expr = None;
          cv_user_attributes = [] }
         ];
       c_constructor = None; c_static_methods = []; c_methods = [];
       c_user_attributes = []; c_enum = None })
  ]
