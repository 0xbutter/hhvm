[(Fun
    { AnnotatedAST.f_annotation = (); f_mode = <opaque>;
      f_ret = (Some ([12:4-12:8], (Hprim Tvoid)));
      f_name = ([3:10-3:14], "\\test"); f_tparams = [];
      f_where_constraints = []; f_variadic = FVnonVariadic;
      f_params =
      [{ AnnotatedAST.param_annotation = ([4:25-4:27], (function(int): bool));
         param_hint =
         (Some ([4:3-4:24],
                (Hfun (false, false, [([4:13-4:16], (Hprim Tint))], [None],
                   Hnon_variadic, ([4:19-4:23], (Hprim Tbool))))));
         param_is_reference = false; param_is_variadic = false;
         param_pos = [4:25-4:27]; param_name = "$f"; param_expr = None;
         param_callconv = None; param_user_attributes = [] };
        { AnnotatedAST.param_annotation =
          ([5:33-5:35], (function(int, string): bool));
          param_hint =
          (Some ([5:3-5:32],
                 (Hfun (false, false,
                    [([5:13-5:16], (Hprim Tint));
                      ([5:18-5:24], (Hprim Tstring))],
                    [None; None], Hnon_variadic, ([5:27-5:31], (Hprim Tbool))
                    ))));
          param_is_reference = false; param_is_variadic = false;
          param_pos = [5:33-5:35]; param_name = "$g"; param_expr = None;
          param_callconv = None; param_user_attributes = [] };
        { AnnotatedAST.param_annotation =
          ([6:48-6:50], (function(int, string, num): \Container<int>));
          param_hint =
          (Some ([6:3-6:47],
                 (Hfun (false, false,
                    [([6:13-6:16], (Hprim Tint));
                      ([6:18-6:24], (Hprim Tstring));
                      ([6:26-6:29], (Hprim Tnum))],
                    [None; None; None], Hnon_variadic,
                    ([6:32-6:41],
                     (Happly (([6:32-6:41], "\\Container"),
                        [([6:42-6:45], (Hprim Tint))])))
                    ))));
          param_is_reference = false; param_is_variadic = false;
          param_pos = [6:48-6:50]; param_name = "$h"; param_expr = None;
          param_callconv = None; param_user_attributes = [] };
        { AnnotatedAST.param_annotation =
          ([7:25-7:27], (function(num): bool));
          param_hint =
          (Some ([7:3-7:24],
                 (Hfun (false, false, [([7:13-7:16], (Hprim Tnum))], 
                    [None], Hnon_variadic, ([7:19-7:23], (Hprim Tbool))))));
          param_is_reference = false; param_is_variadic = false;
          param_pos = [7:25-7:27]; param_name = "$i"; param_expr = None;
          param_callconv = None; param_user_attributes = [] };
        { AnnotatedAST.param_annotation = ([8:18-8:21], \Container<int>);
          param_hint =
          (Some ([8:3-8:12],
                 (Happly (([8:3-8:12], "\\Container"),
                    [([8:13-8:16], (Hprim Tint))]))));
          param_is_reference = false; param_is_variadic = false;
          param_pos = [8:18-8:21]; param_name = "$ci"; param_expr = None;
          param_callconv = None; param_user_attributes = [] };
        { AnnotatedAST.param_annotation = ([9:21-9:24], \Container<string>);
          param_hint =
          (Some ([9:3-9:12],
                 (Happly (([9:3-9:12], "\\Container"),
                    [([9:13-9:19], (Hprim Tstring))]))));
          param_is_reference = false; param_is_variadic = false;
          param_pos = [9:21-9:24]; param_name = "$cs"; param_expr = None;
          param_callconv = None; param_user_attributes = [] };
        { AnnotatedAST.param_annotation =
          ([10:28-10:31], \KeyedContainer<int, num>);
          param_hint =
          (Some ([10:3-10:17],
                 (Happly (([10:3-10:17], "\\KeyedContainer"),
                    [([10:18-10:21], (Hprim Tint));
                      ([10:23-10:26], (Hprim Tnum))]
                    ))));
          param_is_reference = false; param_is_variadic = false;
          param_pos = [10:28-10:31]; param_name = "$cn"; param_expr = None;
          param_callconv = None; param_user_attributes = [] };
        { AnnotatedAST.param_annotation = ([11:8-11:10], bool);
          param_hint = (Some ([11:3-11:7], (Hprim Tbool)));
          param_is_reference = false; param_is_variadic = false;
          param_pos = [11:8-11:10]; param_name = "$b"; param_expr = None;
          param_callconv = None; param_user_attributes = [] }
        ];
      f_body =
      (NamedBody
         { AnnotatedAST.fnb_nast =
           [(Expr
               (([13:3-13:31], (\Container<int> | \KeyedContainer<int, num>)),
                (Binop ((Eq None),
                   (([13:3-13:14], (\Container<int> | \KeyedContainer<int, num>)),
                    (Lvar ([13:3-13:14], $unresolved))),
                   (([13:17-13:31], (\Container<int> | \KeyedContainer<int, num>)),
                    (Eif (
                       (([13:17-13:19], bool), (Lvar ([13:17-13:19], $b))),
                       (Some (([13:22-13:25], \Container<int>),
                              (Lvar ([13:22-13:25], $ci)))),
                       (([13:28-13:31], \KeyedContainer<int, num>),
                        (Lvar ([13:28-13:31], $cn)))
                       )))
                   ))));
             (Expr
                (([15:3-15:21], array<arraykey, bool>),
                 (Call (Cnormal,
                    (([15:3-15:12], (function((function(int): bool), \Container<int>): array<arraykey, bool>)),
                     (Id ([15:3-15:12], "\\array_map"))),
                    [],
                    [(([15:13-15:15], (function(int): bool)),
                      (Lvar ([15:13-15:15], $f)));
                      (([15:17-15:20], \Container<int>),
                       (Lvar ([15:17-15:20], $ci)))
                      ],
                    []))));
             (Expr
                (([16:3-16:26], array<bool>),
                 (Call (Cnormal,
                    (([16:3-16:12], (function((function(int, string): bool), \Container<int>, \Container<string>): array<bool>)),
                     (Id ([16:3-16:12], "\\array_map"))),
                    [],
                    [(([16:13-16:15], (function(int, string): bool)),
                      (Lvar ([16:13-16:15], $g)));
                      (([16:17-16:20], \Container<int>),
                       (Lvar ([16:17-16:20], $ci)));
                      (([16:22-16:25], \Container<string>),
                       (Lvar ([16:22-16:25], $cs)))
                      ],
                    []))));
             (Expr
                (([17:3-17:31], array<\Container<int>>),
                 (Call (Cnormal,
                    (([17:3-17:12], (function((function(int, string, num): \Container<int>), \Container<int>, \Container<string>, \Container<num>): array<\Container<int>>)),
                     (Id ([17:3-17:12], "\\array_map"))),
                    [],
                    [(([17:13-17:15], (function(int, string, num): \Container<int>)),
                      (Lvar ([17:13-17:15], $h)));
                      (([17:17-17:20], \Container<int>),
                       (Lvar ([17:17-17:20], $ci)));
                      (([17:22-17:25], \Container<string>),
                       (Lvar ([17:22-17:25], $cs)));
                      (([17:27-17:30], \KeyedContainer<int, num>),
                       (Lvar ([17:27-17:30], $cn)))
                      ],
                    []))));
             (Expr
                (([18:3-18:29], (array<arraykey, bool> | array<int, bool>)),
                 (Call (Cnormal,
                    (([18:3-18:12], (function((function((num | int)): bool), \Container<(num | int)>): (array<arraykey, bool> | array<int, bool>))),
                     (Id ([18:3-18:12], "\\array_map"))),
                    [],
                    [(([18:13-18:15], (function(num): bool)),
                      (Lvar ([18:13-18:15], $i)));
                      (([18:17-18:28], (\Container<int> | \KeyedContainer<int, num>)),
                       (Lvar ([18:17-18:28], $unresolved)))
                      ],
                    []))))
             ];
           fnb_unsafe = false });
      f_fun_kind = FSync; f_user_attributes = []; f_ret_by_ref = false })
  ]
