[(Class
    { Aast.AnnotatedAST.c_annotation = (); c_mode = <opaque>;
      c_final = false; c_is_xhp = false; c_kind = Ast_defs.Cnormal;
      c_name = ([3:7-3:8], "\\C"); c_tparams = <opaque>; c_extends = [];
      c_uses = []; c_xhp_attr_uses = []; c_xhp_category = [];
      c_req_extends = []; c_req_implements = []; c_implements = [];
      c_consts = []; c_typeconsts = []; c_static_vars = [];
      c_vars =
      [{ Aast.AnnotatedAST.cv_final = false; cv_is_xhp = false;
         cv_visibility = Aast_defs.Private;
         cv_type =
         (Some ([4:11-4:15],
                (Aast_defs.Hoption
                   ([4:12-4:15], (Aast_defs.Hprim Aast_defs.Tint)))));
         cv_id = ([4:16-4:20], "foo");
         cv_expr = (Some (([4:23-4:27], ?_), Null)); cv_user_attributes = []
         }
        ];
      c_constructor = None; c_static_methods = [];
      c_methods =
      [{ Aast.AnnotatedAST.m_annotation = (); m_final = false;
         m_abstract = false; m_visibility = Aast_defs.Public;
         m_name = ([6:19-6:22], "get"); m_tparams = [];
         m_where_constraints = []; m_variadic = FVnonVariadic; m_params = [];
         m_body =
         (NamedBody
            { Aast.AnnotatedAST.fnb_nast =
              [(If (
                  (([7:9-7:19], ?int),
                   (Obj_get ((([7:9-7:14], <static>), This),
                      (([7:16-7:19], ?int), (Id ([7:16-7:19], "foo"))),
                      OG_nullthrows))),
                  [(Expr
                      (([8:7-8:17], int),
                       (Obj_get ((([8:7-8:12], <static>), This),
                          (([8:14-8:17], int), (Id ([8:14-8:17], "foo"))),
                          OG_nullthrows))))
                    ],
                  [Noop]))
                ];
              fnb_unsafe = false });
         m_fun_kind = Ast_defs.FSync; m_user_attributes = [];
         m_ret = (Some ([6:26-6:30], (Aast_defs.Hprim Aast_defs.Tvoid)));
         m_ret_by_ref = false }
        ];
      c_user_attributes = []; c_enum = None })
  ]
